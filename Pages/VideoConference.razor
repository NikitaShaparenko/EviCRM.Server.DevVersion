@page "/video"

@using EviCRM.Server.Core;
@using System.Text
@using System.Security.Cryptography;
@using Microsoft.AspNetCore.Identity

@inject IJSRuntime js
@inject SignInManager<IdentityUser> SignInManager
@inject AuthenticationStateProvider authStateProvider

@inject SystemCore sc
@inject Context _context
@inject IWebHostEnvironment _env
@inject Sentinel sentinel

<style>
    body {
    margin: 0;            /* Reset default margin */
}
iframe {
    display: block;       /* iframes are inline by default */
    background: #000;
    border: none;         /* Reset default border */
    height: 100vh;        /* Viewport-relative units */
    width: 100vw;
}
</style>

<PageTitle>Видеоконференции</PageTitle>

@if(ready)
{
    <iframe src=@videoconference_link frameborder="0" allowusermedia allow="accelerometer; autoplay; encrypted-media; microphone https://evicrm.space; camera https://evicrm.space; gyroscope; picture-in-picture; display-capture *; display-capture https://evicrm.space" allowfullscreen></iframe>  
}
else
{
    <h5><i class="bx bx-buoy bx-spin text-primary display-3"></i> Загружаю видеоконференции, ожидайте пожалуйста... </h5>
}
@code{

    string videoconference_link { get; set;}
    const string base_url = "https://evicrm.space/";

    bool ready { get; set; }
    bool isAdmin { get; set; }
    string user_role { get; set; }
    string user_name { get; set; }
    string sha1_code { get; set; }

    string user_ { get; set; }

    List<schema_users> Users = new();
    schema_users user_model = new();

    protected override async Task OnInitializedAsync()
    {
        ready = false;

        user_ = authStateProvider.GetAuthenticationStateAsync().Result.User.Identity.Name;

        //Получаем карточку пользователя

        if (user_ != null)
        {
            user_model = _context.User_Get(user_);

            //Проверка админки
            if (user_model.role == "admin" 
                || user_model.role=="owner"
                || user_model.role =="secretary")
            {
                isAdmin = true;
            }
            else
            {
                isAdmin = false;
            }

            //Загрузка данных

            Users = _context.Users_Get();

            sc.Log("VideoConference","Успешно зашёл в видеоконференции -> " + sentinel.TripleDesDecrypt(user_), SystemCore.LogLevels.Info);
            sc.Syslog(_env, user_, "Видеоконференции", "Успешно зашёл в видеоконференции", SystemCore.LogLevels.Info);
        }
        else
        {
            sc.Log("VideoConference", "Зашёл в видеоконференции, не авторизован!", SystemCore.LogLevels.Fatal);
            //notify
            return;
        }

        if (isAdmin) user_role = "admin";
        if (!isAdmin) user_role = "user";
        user_name = format_fixer(user_model.fullname);
        sha1_code = sha512_encode(format_fixer(user_name));

        char user_role_fix = 'u';

        if (user_role=="admin")
        {
            user_role_fix = 'a';
        }

        videoconference_link = base_url + "?name=" + user_name + "&role=" + user_role_fix + "&hash=" + sha1_code;

        ready = true;
        StateHasChanged();
    }


    string format_fixer(string input)
    {
        string format_input = "";
        for (int j = 0; j<input.Length;j++)
        {
            if (input[j] == ' ')
            {
                format_input += '_';
            }
            else
            {
                format_input += input[j];
            }
        }
        return format_input;

    }

    static string sha512_encode(string input)
    {
            var hash = new SHA1Managed().ComputeHash(Encoding.UTF8.GetBytes(input));
            return string.Concat(hash.Select(b => b.ToString("x2")));
        }

}
