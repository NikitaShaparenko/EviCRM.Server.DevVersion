@inject IWebHostEnvironment _env;

@inject SystemCore sc;

<style>
    .wordwrap {
        word-wrap: break-word; /* Перенос слов */
    }

    .container {
        border: 1px solid #000000;
        height: 300px;
    }

        .container textarea {
            border: 1px solid red;
            height: 100%;
        }

    /* Important part */
    .modal-dialog {
        overflow-y: initial !important
    }

    .modal-body {
        max-height: calc(100vh - 200px);
        overflow-y: auto;
    }
</style>

<div class="modal fade show" id="myModal" style="display:block; background-color: rgba(10,10,10,.8);" aria-modal="true" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">

            <div class="modal-header">
                <h4 class="modal-title">Состав команды исполнителей</h4>
                <button type="button" class="close" @onclick="@ModalCancel">&times;</button>
            </div>

            <div class="modal-body">
                <div class="table-responsive">
                    <table class="table table-nowrap align-middle mb-0">

                        <thead class="table-light">
                            <tr>
                                <th scope="col">#</th>
                                <th scope="col"></th>
                                <th scope="col">ФИО пользователя</th>
                            </tr>
                        </thead>

                        <tbody>


                            @if (Users != null)
                            {
                                foreach(var elem in Users)
                                {
                                  <tr>
                                    <td>
                                        
                                        @if (choosen_checkbox.Contains(elem))
                                        {
                                            <input class="form-check-input" type="checkbox" checked="checked" id="ttm_cardmark_selected_@elem.id" name="ttm_cardmark_selected_@elem.id" @onchange="eventArgs => { CheckboxClicked(elem, eventArgs.Value); }" />
                                        }
                                        else
                                        {
                                            <input class="form-check-input" type="checkbox" id="ttm_cardmark_selected_@elem.id" name="ttm_cardmark_selected_@elem.id" @onchange="eventArgs => { CheckboxClicked(elem, eventArgs.Value); }" />
                                        }
                                    </td>

                                    <td>
                                        @if (System.IO.File.Exists(Path.Combine(_env.WebRootPath, "users","avatars", elem.avatar)) == false)
                                        {

                                            <div class="avatar-xs">
                                                <span class="avatar-title rounded-circle">
                                                    @{
                                                        string str = elem.fullname.ToUpper();
                                                        char b_str = '?';
                                                        if (str.Length > 0)
                                                        {
                                                            b_str = str[0];
                                                        }
                                                        @b_str
                                                    }
                                                </span>
                                            </div>

                                        }
                                        else
                                        {
                                            <div>
                                                <img class="rounded-circle avatar-xs" src=@("/users/avatars/" +elem.avatar) alt="Ава">
                                            </div>
                                        }
                                    </td>

                                    <td>
                                        @elem.fullname
                                    </td>
                                </tr>
                                }
                            }

                        </tbody>
                    </table>
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn" @onclick="@ModalCancel">Закрыть</button>
                    <button type="button" class="btn btn-success" @onclick=@ModalOk>Сохранить выбранных</button>
                </div>

            </div>
        </div>
    </div>
</div>

@code {


    List<schema_users> choosen_checkbox = new List<schema_users>();

    [Parameter]
    public List<schema_users> Users { get; set; }

     [Parameter]
    public List<schema_users> Selected_Users { get; set; }

    [Parameter]
    public EventCallback<bool> OnClose { get; set; }

    [Parameter]
    public EventCallback<List<schema_users>> OnChoosenUsers { get; set; }

    [Parameter]
    public string user_ { get; set; }

    [Parameter]
    public string task_id { get; set; }

    private Task ModalCancel()
    {
        return OnClose.InvokeAsync(false);
    }

    private Task ModalOk()
    {
        OnChoosenUsers.InvokeAsync(choosen_checkbox);
        return OnClose.InvokeAsync(true);
    }

    protected override void OnInitialized()
    {
        foreach(var elem in Selected_Users)
        {
            choosen_checkbox.Add(elem);
        }
    }

    void CheckboxClicked(schema_users user, object checkedValue)
    {
        if ((bool)checkedValue) //Если нажата, то
        {
            if (choosen_checkbox.Contains(user))
            {
                //Такой ситуации быть не должно - двойное нажатие на чекбокс
            }
            else
            {
                choosen_checkbox.Add(user);
                sc.Log("TaskTracking", "CrewModal", "Был добавлен пользователь: " + user.fullname, SystemCore.LogLevels.Info);
                sc.Syslog(_env, user_, "Задачи \\ Отслеживание", "Добавил пользователя  " + user.fullname + " к задаче '" + "' c ID = " + task_id, SystemCore.LogLevels.Info);
            }
        }
        else
        {
            if (choosen_checkbox.Contains(user))
            {
                int z = choosen_checkbox.IndexOf(user);
                choosen_checkbox.RemoveAt(z);
                sc.Log("TaskTracking", "CrewModal", "Был удалён пользователь: " + user.fullname, SystemCore.LogLevels.Info);
                sc.Syslog(_env, user_, "Задачи \\ Отслеживание", "Исключил пользователя  " + user.fullname + " в задаче '" + "' c ID = " + task_id, SystemCore.LogLevels.Info);
            }
            else
            {
                //Такой ситуации быть не должно - не было вообще нажатия
            }
        }
    }
}
